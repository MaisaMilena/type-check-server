{"status":"success","timestamp":1620765364362,"processingTime":281,"url":"/api/check_term?code=//%20Recursion%20and%20induction%20are%20similar%20concepts.%0A%0A//%20A%20recursive%20function%20that%20sums%20all%20numbers%20from%200%20to%20N:%0AExample.recursions.sum(n:%20Nat):%20Nat%0A%20%20case%20n%20%7B%0A%20%20%20%20zero:%200%0A%20%20%20%20succ:%20n%20+%20Example.recursions.sum(n.pred)%0A%20%20%7D%0A%0A//%20A%20recursive%20function%20that%20doubles%20a%20natural%20number:%0AExample.recursions.double(n:%20Nat):%20Nat%0A%20%20case%20n%20%7B%0A%20%20%20%20zero:%200%0A%20%20%20%20succ:%20Nat.succ(Nat.succ(Example.recursions.double(n.pred)))%0A%20%20%7D%0A%0A//%20A%20recursive%20function%20that%20halves%20a%20natural%20number:%0AExample.recursions.half(n:%20Nat):%20Nat%0A%20%20case%20n%20%7B%0A%20%20%20%20zero:%200%0A%20%20%20%20succ:%20case%20n.pred%20%7B%0A%20%20%20%20%20%20zero:%200%0A%20%20%20%20%20%20succ:%20Nat.succ(Example.recursions.half(n.pred.pred))%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A//%20A%20proof%20that%20(n%20*%202)%20/%202%20==%20n%0AExample.recursions.half_double_theorem(n:%20Nat):%20Nat.half(Nat.double(n))%20==%20n%0A%20%20case%20n%20%7B%0A%20%20%20%20zero:%20refl%0A%20%20%20%20succ:%20apply(Nat.succ,%20Example.recursions.half_double_theorem(n.pred))%0A%20%20%7D!%0A","code":"// Recursion and induction are similar concepts.\n\n// A recursive function that sums all numbers from 0 to N:\nExample.recursions.sum(n: Nat): Nat\n  case n {\n    zero: 0\n    succ: n   Example.recursions.sum(n.pred)\n  }\n\n// A recursive function that doubles a natural number:\nExample.recursions.double(n: Nat): Nat\n  case n {\n    zero: 0\n    succ: Nat.succ(Nat.succ(Example.recursions.double(n.pred)))\n  }\n\n// A recursive function that halves a natural number:\nExample.recursions.half(n: Nat): Nat\n  case n {\n    zero: 0\n    succ: case n.pred {\n      zero: 0\n      succ: Nat.succ(Example.recursions.half(n.pred.pred))\n    }\n  }\n\n// A proof that (n * 2) / 2 == n\nExample.recursions.half_double_theorem(n: Nat): Nat.half(Nat.double(n)) == n\n  case n {\n    zero: refl\n    succ: apply(Nat.succ, Example.recursions.half_double_theorem(n.pred))\n  }!\n"}